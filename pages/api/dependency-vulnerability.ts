// Dependency Vulnerability Scan
import type { NextApiRequest, NextApiResponse } from 'next';
import { exec } from 'child_process';

export default function handler(req: NextApiRequest, res: NextApiResponse) {
  exec('npm audit --json', { cwd: process.cwd() }, (err, stdout, stderr) => {
    if (err || stderr.includes('npm error')) {
      // Try yarn audit as fallback
      exec('yarn audit --json', { cwd: process.cwd() }, (yarnErr, yarnStdout, yarnStderr) => {
        if (yarnErr || yarnStderr) {
          res.status(200).json({
            error: 'Both npm audit and yarn audit failed.',
            details: stderr || yarnStderr,
            suggestion: 'Check your internet connection, registry settings, and ensure npm/yarn are up to date.'
          });
          return;
        }
        // Parse yarn audit output (stream of JSON lines)
        try {
          const lines = yarnStdout.split('\n').filter(Boolean);
          const results = lines.map(line => {
            try { return JSON.parse(line); } catch { return null; }
          }).filter(Boolean);
          res.status(200).json({ yarnAudit: results });
        } catch (e) {
          res.status(200).json({ error: 'Failed to parse yarn audit output', details: yarnStdout });
        }
      });
      return;
    }
    try {
      const result = JSON.parse(stdout);
      res.status(200).json(result);
    } catch (e) {
      res.status(200).json({ error: 'Failed to parse npm audit output', details: stdout });
    }
  });
}
